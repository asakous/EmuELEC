diff -Naur old/es-app/src/guis/GuiMenu.cpp new/es-app/src/guis/GuiMenu.cpp
--- old/es-app/src/guis/GuiMenu.cpp	2021-07-13 16:17:18.000000000 +0800
+++ new/es-app/src/guis/GuiMenu.cpp	2021-07-13 16:29:26.329723842 +0800
@@ -215,19 +215,19 @@
 #if !defined(_ENABLEGAMEFORCE) && !defined(ODROIDGOA)
 	auto emuelec_video_mode = std::make_shared< OptionListComponent<std::string> >(mWindow, "VIDEO MODE", false);
         std::vector<std::string> videomode;
-		videomode.push_back("1080p60hz");
-		videomode.push_back("1080i60hz");
-		videomode.push_back("720p60hz");
-		videomode.push_back("720p50hz");
-		videomode.push_back("480p60hz");
-		videomode.push_back("480cvbs");
-		videomode.push_back("576p50hz");
-		videomode.push_back("1080p50hz");
-		videomode.push_back("1080i50hz");
-		videomode.push_back("576cvbs");
-		videomode.push_back("Custom");
-		videomode.push_back("-- AUTO-DETECTED RESOLUTIONS --");
-   for(std::stringstream ss(getShOutput(R"(/usr/bin/emuelec-utils resolutions)")); getline(ss, a, ','); ) {
+videomode.push_back("1080p60");
+videomode.push_back("1080i60");
+videomode.push_back("720p60");
+videomode.push_back("720p50");
+videomode.push_back("480p60");
+videomode.push_back("576p");
+videomode.push_back("1080p50");
+videomode.push_back("1080i50");
+videomode.push_back("1680x1050");
+videomode.push_back("1360x768");
+videomode.push_back("800x480");
+videomode.push_back("1440x900");   
+for(std::stringstream ss(getShOutput(R"(/usr/bin/emuelec-utils resolutions)")); getline(ss, a, ','); ) {
         videomode.push_back(a);
 	}
 		for (auto it = videomode.cbegin(); it != videomode.cend(); it++) {
@@ -270,7 +270,8 @@
 				SystemConf::getInstance()->saveSystemConf();
 				//v_need_reboot = true;
 					} else {
-					runSystemCommand("echo " + SystemConf::getInstance()->get("ee_videomode")+ " > /sys/class/display/mode", "", nullptr);
+					//runSystemCommand("echo " + SystemConf::getInstance()->get("ee_videomode")+ " > /sys/class/display/mode", "", nullptr);
+					runSystemCommand("/usr/sbin/h3disp -m " + SystemConf::getInstance()->get("ee_videomode")+ " ", "", nullptr);
 					std::string msg = "/storage/.config/EE_VIDEO_MODE or /flash/EE_VIDEO_MODE not found";
 					window->pushGui(new GuiMsgBox(window, msg,
 				"OK", [selectedVideoMode] {
